{"ast":null,"code":"var _jsxFileName = \"/home/jaydin/wsl/easytemps/easy_temps/src/App.tsx\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mTemps: [],\n      mFilteredList: [],\n      deviceList: [],\n      sort: null\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          style: {\n            fontWeight: \"bold\",\n            fontSize: \"4rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"lightsalmon\"\n            },\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"lightblue\"\n            },\n            children: \"Temps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tempcontainer\",\n          style: {\n            backgroundColor: \"dimgray\",\n            borderRadius: \"10px\",\n            marginTop: \"40px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"deviceSelector\",\n              children: \"Select Device ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"deviceSelector\",\n              onChange: e => {\n                const selectedDevice = e.target.value;\n                this.setState({\n                  sort: selectedDevice\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), this.state.deviceList.map((device, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: device.deviceId,\n                children: device.deviceId\n              }, device.deviceId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), this.state.mFilteredList.map((temp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            style: {\n              width: \"98%\",\n              backgroundColor: index % 2 === 0 ? \"lightgray\" : \"white\",\n              padding: \"5px\" // Optional: Add padding for better spacing\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                borderRight: \"1px solid gray\",\n                padding: \"5px\"\n              },\n              children: [\"Device \", temp.deviceId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                borderRight: \"1px solid gray\",\n                padding: \"5px\"\n              },\n              children: [\"Description \", temp.deviceDescription]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                borderRight: \"1px solid gray\",\n                padding: \"5px\"\n              },\n              children: [\"Temperature \", temp.temp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                padding: \"5px\"\n              },\n              children: [\"Humidity \", temp.humidity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this)]\n          }, temp.logId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.sort !== prevState.sort && this.state.sort !== null) {\n      if (this.state.sort === \"\") {\n        this.setState({\n          mFilteredList: this.state.mTemps\n        });\n      } else {\n        const filteredList = this.state.mTemps.filter(temp => temp.deviceId.toString() === this.state.sort);\n        this.setState({\n          mFilteredList: filteredList\n        });\n      }\n    }\n    if (this.state.sort !== prevState.sort && this.state.sort === null) {\n      this.setState({\n        mFilteredList: this.state.mTemps\n      });\n    }\n  }\n  async componentDidMount() {\n    try {\n      const response = await fetch(`http://localhost:3001/temps/`, {\n        method: \"GET\"\n      });\n      console.log(response); // Log the response\n      const temps = await response.json();\n      console.log(temps); // Log the prizes\n      this.setState({\n        mTemps: temps,\n        mFilteredList: temps\n      });\n    } catch (error) {\n      console.error(error);\n    }\n    try {\n      const response = await fetch(`http://localhost:3001/devices/`, {\n        method: \"GET\"\n      });\n      console.log(response); // Log the response\n      const devices = await response.json();\n      console.log(devices); // Log the prizes\n      this.setState({\n        deviceList: devices\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\nApp.defaultProps = {};","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","Component","constructor","props","state","mTemps","mFilteredList","deviceList","sort","render","className","children","style","fontWeight","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","borderRadius","marginTop","display","flexDirection","alignItems","htmlFor","id","onChange","e","selectedDevice","target","value","setState","map","device","index","deviceId","temp","width","padding","borderRight","deviceDescription","humidity","logId","componentDidUpdate","prevProps","prevState","snapshot","filteredList","filter","toString","componentDidMount","response","fetch","method","console","log","temps","json","error","devices","defaultProps"],"sources":["/home/jaydin/wsl/easytemps/easy_temps/src/App.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\ntype PropsType = {};\ntype tempType = {\n    deviceId: string;\n    temp: number;\n    logId: string;\n    humidity: number;\n    tempDate: Date;\n    deviceDescription: string;\n};\ntype Device = {\n    deviceId: number;\n    storeId: number;\n    deviceDescription: string;\n};\ntype StatesType = {\n    mTemps: tempType[];\n    mFilteredList: tempType[];\n    deviceList: Device[];\n    sort: string | null;\n};\n\nexport default class App extends React.Component<PropsType, StatesType> {\n    static defaultProps: PropsType = {};\n\n    constructor(props: PropsType) {\n        super(props);\n\n        this.state = {\n            mTemps: [],\n            mFilteredList: [],\n            deviceList: [],\n            sort: null,\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <div\n                        className=\"logo\"\n                        style={{ fontWeight: \"bold\", fontSize: \"4rem\" }}\n                    >\n                        <span style={{ color: \"lightsalmon\" }}>Easy</span>{\" \"}\n                        <span style={{ color: \"lightblue\" }}>Temps</span>\n                    </div>{\" \"}\n                    <div\n                        className=\"tempcontainer\"\n                        style={{\n                            backgroundColor: \"dimgray\",\n                            borderRadius: \"10px\",\n                            marginTop: \"40px\",\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div>\n                            <label htmlFor=\"deviceSelector\">\n                                Select Device ID:\n                            </label>\n                            <select\n                                id=\"deviceSelector\"\n                                onChange={(e) => {\n                                    const selectedDevice = e.target.value;\n                                    this.setState({ sort: selectedDevice });\n                                }}\n                            >\n                                <option value=\"\">All</option>\n                                {this.state.deviceList.map((device, index) => (\n                                    <option\n                                        value={device.deviceId}\n                                        key={device.deviceId}\n                                    >\n                                        {device.deviceId}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n\n                        {this.state.mFilteredList.map((temp, index) => (\n                            <div\n                                className=\"temp\"\n                                key={temp.logId}\n                                style={{\n                                    width: \"98%\",\n                                    backgroundColor:\n                                        index % 2 === 0 ? \"lightgray\" : \"white\",\n                                    padding: \"5px\", // Optional: Add padding for better spacing\n                                }}\n                            >\n                                <p\n                                    style={{\n                                        borderRight: \"1px solid gray\",\n                                        padding: \"5px\",\n                                    }}\n                                >\n                                    Device {temp.deviceId}\n                                </p>\n                                <p\n                                    style={{\n                                        borderRight: \"1px solid gray\",\n                                        padding: \"5px\",\n                                    }}\n                                >\n                                    Description {temp.deviceDescription}\n                                </p>\n                                <p\n                                    style={{\n                                        borderRight: \"1px solid gray\",\n                                        padding: \"5px\",\n                                    }}\n                                >\n                                    Temperature {temp.temp}\n                                </p>\n                                <p style={{ padding: \"5px\" }}>\n                                    Humidity {temp.humidity}\n                                </p>\n                            </div>\n                        ))}\n                    </div>\n                </header>\n            </div>\n        );\n    }\n\n    componentDidUpdate(\n        prevProps: Readonly<PropsType>,\n        prevState: Readonly<StatesType>,\n        snapshot?: any\n    ): void {\n        if (this.state.sort !== prevState.sort && this.state.sort !== null) {\n            if (this.state.sort === \"\") {\n                this.setState({ mFilteredList: this.state.mTemps });\n            } else {\n                const filteredList = this.state.mTemps.filter(\n                    (temp) => temp.deviceId.toString() === this.state.sort\n                );\n                this.setState({ mFilteredList: filteredList });\n            }\n        }\n        if (this.state.sort !== prevState.sort && this.state.sort === null) {\n            this.setState({ mFilteredList: this.state.mTemps });\n        }\n    }\n\n    async componentDidMount(): Promise<void> {\n        try {\n            const response = await fetch(`http://localhost:3001/temps/`, {\n                method: \"GET\",\n            });\n            console.log(response); // Log the response\n            const temps: tempType[] = await response.json();\n            console.log(temps); // Log the prizes\n            this.setState({ mTemps: temps, mFilteredList: temps });\n        } catch (error) {\n            console.error(error);\n        }\n        try {\n            const response = await fetch(`http://localhost:3001/devices/`, {\n                method: \"GET\",\n            });\n            console.log(response); // Log the response\n            const devices: Device[] = await response.json();\n            console.log(devices); // Log the prizes\n            this.setState({ deviceList: devices });\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}